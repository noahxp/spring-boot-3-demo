plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'tw.noah'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'com.google.guava:guava:31.1-jre'

    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}


tasks.register('preJibBuild') {
    doLast {
        exec {
            workingDir '.'
            commandLine 'sh', '-c', 'docker build --platform linux/amd64 -t="noahxp-spring-boot:latest" .'
        }
    }
}

jib {
    from.image = 'docker://noahxp-spring-boot:latest' // docker image source write in Dockerfile

    to {
        image = "noahxp/spring-boot:latest"
    }
    container {
        jvmFlags = ['-Djava.security.egd=file:/dev/./urandom', '-Dserver.port=8080', '-Duser.timezone=Asia/Taipei']
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
}

tasks.register('docker-build') {
    finalizedBy("preJibBuild")
    finalizedBy("jibDockerBuild")
}


wrapper {
    gradleVersion = '7.5.1'
    distributionType = Wrapper.DistributionType.BIN
}
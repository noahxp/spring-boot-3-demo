plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.cloud.tools.jib' version '3.3.2'
    id 'nebula.lint' version "18.1.0"
}

group = 'tw.noah'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        implementation 'com.google.guava:guava:32.0.0-jre'
        implementation 'org.apache.commons:commons-lang3'

        implementation 'io.grpc:grpc-stub:1.55.1'
        implementation 'io.grpc:grpc-protobuf:1.55.1'

        runtimeOnly 'com.h2database:h2'

        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// build multi arch, multi tag. it's will build multi arch and push to docker hub.
// $ ./gradlew jib -Djib.from.platforms=linux/amd64,linux/arm64 -Djib.to.image=mikasaxp/spring-boot:latest -Djib.to.tags=abc
jib {
    from.image = 'amazoncorretto:17-alpine-jdk'
    to.image = "noahxp/spring-boot:latest"
    container {
        mainClass = 'tw.noah.demo.Application'
        jvmFlags = ['-Djava.security.egd=file:/dev/./urandom', '-Dserver.port=8080', '-Duser.timezone=Asia/Taipei']
        ports = ['8080']
        creationTime = 'USE_CURRENT_TIMESTAMP'
        environment = [   // Dockerfile ENV
            'TZ': 'Asia/Taipei'
        ]
    }
}

wrapper {
    gradleVersion = '8.1.1'
    distributionType = Wrapper.DistributionType.BIN
}
